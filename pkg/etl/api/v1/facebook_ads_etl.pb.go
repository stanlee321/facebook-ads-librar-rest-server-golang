// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.5.1
// source: facebook_ads_etl.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type FacebookAd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdId                      string `protobuf:"bytes,1,opt,name=ad_id,json=adId,proto3" json:"ad_id,omitempty"`
	PageId                    string `protobuf:"bytes,2,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty"`
	PageName                  string `protobuf:"bytes,3,opt,name=page_name,json=pageName,proto3" json:"page_name,omitempty"`
	AdSnapshotUrl             string `protobuf:"bytes,4,opt,name=ad_snapshot_url,json=adSnapshotUrl,proto3" json:"ad_snapshot_url,omitempty"`
	AdCreativeBody            string `protobuf:"bytes,5,opt,name=ad_creative_body,json=adCreativeBody,proto3" json:"ad_creative_body,omitempty"`
	AdCreativeLinkCaption     string `protobuf:"bytes,6,opt,name=ad_creative_link_caption,json=adCreativeLinkCaption,proto3" json:"ad_creative_link_caption,omitempty"`
	AdCreativeLinkDescription string `protobuf:"bytes,7,opt,name=ad_creative_link_description,json=adCreativeLinkDescription,proto3" json:"ad_creative_link_description,omitempty"`
	AdCreativeLinkTitle       string `protobuf:"bytes,8,opt,name=ad_creative_link_title,json=adCreativeLinkTitle,proto3" json:"ad_creative_link_title,omitempty"`
	AdDeliveryStartTime       string `protobuf:"bytes,9,opt,name=ad_delivery_start_time,json=adDeliveryStartTime,proto3" json:"ad_delivery_start_time,omitempty"`
	AdDeliveryStopTime        string `protobuf:"bytes,10,opt,name=ad_delivery_stop_time,json=adDeliveryStopTime,proto3" json:"ad_delivery_stop_time,omitempty"`
	FundingEntity             string `protobuf:"bytes,11,opt,name=funding_entity,json=fundingEntity,proto3" json:"funding_entity,omitempty"`
	ImpressionsMin            int32  `protobuf:"varint,12,opt,name=impressions_min,json=impressionsMin,proto3" json:"impressions_min,omitempty"`
	ImpressionsMax            int32  `protobuf:"varint,13,opt,name=impressions_max,json=impressionsMax,proto3" json:"impressions_max,omitempty"`
	SpendMin                  int32  `protobuf:"varint,14,opt,name=spend_min,json=spendMin,proto3" json:"spend_min,omitempty"`
	SpendMax                  int32  `protobuf:"varint,15,opt,name=spend_max,json=spendMax,proto3" json:"spend_max,omitempty"`
	Currency                  string `protobuf:"bytes,16,opt,name=currency,proto3" json:"currency,omitempty"`
	AdUrl                     string `protobuf:"bytes,17,opt,name=ad_url,json=adUrl,proto3" json:"ad_url,omitempty"`
	SocialMediaFacebook       string `protobuf:"bytes,18,opt,name=social_media_facebook,json=socialMediaFacebook,proto3" json:"social_media_facebook,omitempty"`
	SocialMediaInstagram      string `protobuf:"bytes,19,opt,name=social_media_instagram,json=socialMediaInstagram,proto3" json:"social_media_instagram,omitempty"`
	SocialMediaWhatsapp       string `protobuf:"bytes,20,opt,name=social_media_whatsapp,json=socialMediaWhatsapp,proto3" json:"social_media_whatsapp,omitempty"`
	SearchTerms               string `protobuf:"bytes,21,opt,name=search_terms,json=searchTerms,proto3" json:"search_terms,omitempty"`
	AdCreationTime            string `protobuf:"bytes,22,opt,name=ad_creation_time,json=adCreationTime,proto3" json:"ad_creation_time,omitempty"`
	PotentialReachMax         int32  `protobuf:"varint,23,opt,name=potential_reach_max,json=potentialReachMax,proto3" json:"potential_reach_max,omitempty"`
	PotentialReachMin         int32  `protobuf:"varint,24,opt,name=potential_reach_min,json=potentialReachMin,proto3" json:"potential_reach_min,omitempty"`
}

func (x *FacebookAd) Reset() {
	*x = FacebookAd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_ads_etl_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FacebookAd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FacebookAd) ProtoMessage() {}

func (x *FacebookAd) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_ads_etl_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FacebookAd.ProtoReflect.Descriptor instead.
func (*FacebookAd) Descriptor() ([]byte, []int) {
	return file_facebook_ads_etl_proto_rawDescGZIP(), []int{0}
}

func (x *FacebookAd) GetAdId() string {
	if x != nil {
		return x.AdId
	}
	return ""
}

func (x *FacebookAd) GetPageId() string {
	if x != nil {
		return x.PageId
	}
	return ""
}

func (x *FacebookAd) GetPageName() string {
	if x != nil {
		return x.PageName
	}
	return ""
}

func (x *FacebookAd) GetAdSnapshotUrl() string {
	if x != nil {
		return x.AdSnapshotUrl
	}
	return ""
}

func (x *FacebookAd) GetAdCreativeBody() string {
	if x != nil {
		return x.AdCreativeBody
	}
	return ""
}

func (x *FacebookAd) GetAdCreativeLinkCaption() string {
	if x != nil {
		return x.AdCreativeLinkCaption
	}
	return ""
}

func (x *FacebookAd) GetAdCreativeLinkDescription() string {
	if x != nil {
		return x.AdCreativeLinkDescription
	}
	return ""
}

func (x *FacebookAd) GetAdCreativeLinkTitle() string {
	if x != nil {
		return x.AdCreativeLinkTitle
	}
	return ""
}

func (x *FacebookAd) GetAdDeliveryStartTime() string {
	if x != nil {
		return x.AdDeliveryStartTime
	}
	return ""
}

func (x *FacebookAd) GetAdDeliveryStopTime() string {
	if x != nil {
		return x.AdDeliveryStopTime
	}
	return ""
}

func (x *FacebookAd) GetFundingEntity() string {
	if x != nil {
		return x.FundingEntity
	}
	return ""
}

func (x *FacebookAd) GetImpressionsMin() int32 {
	if x != nil {
		return x.ImpressionsMin
	}
	return 0
}

func (x *FacebookAd) GetImpressionsMax() int32 {
	if x != nil {
		return x.ImpressionsMax
	}
	return 0
}

func (x *FacebookAd) GetSpendMin() int32 {
	if x != nil {
		return x.SpendMin
	}
	return 0
}

func (x *FacebookAd) GetSpendMax() int32 {
	if x != nil {
		return x.SpendMax
	}
	return 0
}

func (x *FacebookAd) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *FacebookAd) GetAdUrl() string {
	if x != nil {
		return x.AdUrl
	}
	return ""
}

func (x *FacebookAd) GetSocialMediaFacebook() string {
	if x != nil {
		return x.SocialMediaFacebook
	}
	return ""
}

func (x *FacebookAd) GetSocialMediaInstagram() string {
	if x != nil {
		return x.SocialMediaInstagram
	}
	return ""
}

func (x *FacebookAd) GetSocialMediaWhatsapp() string {
	if x != nil {
		return x.SocialMediaWhatsapp
	}
	return ""
}

func (x *FacebookAd) GetSearchTerms() string {
	if x != nil {
		return x.SearchTerms
	}
	return ""
}

func (x *FacebookAd) GetAdCreationTime() string {
	if x != nil {
		return x.AdCreationTime
	}
	return ""
}

func (x *FacebookAd) GetPotentialReachMax() int32 {
	if x != nil {
		return x.PotentialReachMax
	}
	return 0
}

func (x *FacebookAd) GetPotentialReachMin() int32 {
	if x != nil {
		return x.PotentialReachMin
	}
	return 0
}

type FacebookAdDemo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdId                string  `protobuf:"bytes,1,opt,name=ad_id,json=adId,proto3" json:"ad_id,omitempty"`
	PageId              string  `protobuf:"bytes,2,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty"`
	Age                 string  `protobuf:"bytes,3,opt,name=age,proto3" json:"age,omitempty"`
	Gender              string  `protobuf:"bytes,4,opt,name=gender,proto3" json:"gender,omitempty"`
	Percentage          float64 `protobuf:"fixed64,5,opt,name=percentage,proto3" json:"percentage,omitempty"`
	AdDeliveryStartTime string  `protobuf:"bytes,6,opt,name=ad_delivery_start_time,json=adDeliveryStartTime,proto3" json:"ad_delivery_start_time,omitempty"`
}

func (x *FacebookAdDemo) Reset() {
	*x = FacebookAdDemo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_ads_etl_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FacebookAdDemo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FacebookAdDemo) ProtoMessage() {}

func (x *FacebookAdDemo) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_ads_etl_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FacebookAdDemo.ProtoReflect.Descriptor instead.
func (*FacebookAdDemo) Descriptor() ([]byte, []int) {
	return file_facebook_ads_etl_proto_rawDescGZIP(), []int{1}
}

func (x *FacebookAdDemo) GetAdId() string {
	if x != nil {
		return x.AdId
	}
	return ""
}

func (x *FacebookAdDemo) GetPageId() string {
	if x != nil {
		return x.PageId
	}
	return ""
}

func (x *FacebookAdDemo) GetAge() string {
	if x != nil {
		return x.Age
	}
	return ""
}

func (x *FacebookAdDemo) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *FacebookAdDemo) GetPercentage() float64 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

func (x *FacebookAdDemo) GetAdDeliveryStartTime() string {
	if x != nil {
		return x.AdDeliveryStartTime
	}
	return ""
}

type FacebookAdRegion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdId                string  `protobuf:"bytes,1,opt,name=ad_id,json=adId,proto3" json:"ad_id,omitempty"`
	PageId              string  `protobuf:"bytes,2,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty"`
	Region              string  `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	Percentage          float64 `protobuf:"fixed64,4,opt,name=percentage,proto3" json:"percentage,omitempty"`
	AdDeliveryStartTime string  `protobuf:"bytes,5,opt,name=ad_delivery_start_time,json=adDeliveryStartTime,proto3" json:"ad_delivery_start_time,omitempty"`
}

func (x *FacebookAdRegion) Reset() {
	*x = FacebookAdRegion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_ads_etl_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FacebookAdRegion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FacebookAdRegion) ProtoMessage() {}

func (x *FacebookAdRegion) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_ads_etl_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FacebookAdRegion.ProtoReflect.Descriptor instead.
func (*FacebookAdRegion) Descriptor() ([]byte, []int) {
	return file_facebook_ads_etl_proto_rawDescGZIP(), []int{2}
}

func (x *FacebookAdRegion) GetAdId() string {
	if x != nil {
		return x.AdId
	}
	return ""
}

func (x *FacebookAdRegion) GetPageId() string {
	if x != nil {
		return x.PageId
	}
	return ""
}

func (x *FacebookAdRegion) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *FacebookAdRegion) GetPercentage() float64 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

func (x *FacebookAdRegion) GetAdDeliveryStartTime() string {
	if x != nil {
		return x.AdDeliveryStartTime
	}
	return ""
}

type CreateFacebookAdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchTerms        string `protobuf:"bytes,1,opt,name=search_terms,json=searchTerms,proto3" json:"search_terms,omitempty"`
	AccessToken        string `protobuf:"bytes,2,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	PageTotal          int32  `protobuf:"varint,3,opt,name=page_total,json=pageTotal,proto3" json:"page_total,omitempty"`
	SearchTotal        int32  `protobuf:"varint,4,opt,name=search_total,json=searchTotal,proto3" json:"search_total,omitempty"`
	AdActiveStatus     string `protobuf:"bytes,5,opt,name=ad_active_status,json=adActiveStatus,proto3" json:"ad_active_status,omitempty"`
	AdDeliveryDateMax  string `protobuf:"bytes,6,opt,name=ad_delivery_date_max,json=adDeliveryDateMax,proto3" json:"ad_delivery_date_max,omitempty"`
	AdDeliveryDateMin  string `protobuf:"bytes,7,opt,name=ad_delivery_date_min,json=adDeliveryDateMin,proto3" json:"ad_delivery_date_min,omitempty"`
	AdReachedCountries string `protobuf:"bytes,8,opt,name=ad_reached_countries,json=adReachedCountries,proto3" json:"ad_reached_countries,omitempty"`
}

func (x *CreateFacebookAdRequest) Reset() {
	*x = CreateFacebookAdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_ads_etl_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFacebookAdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFacebookAdRequest) ProtoMessage() {}

func (x *CreateFacebookAdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_ads_etl_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFacebookAdRequest.ProtoReflect.Descriptor instead.
func (*CreateFacebookAdRequest) Descriptor() ([]byte, []int) {
	return file_facebook_ads_etl_proto_rawDescGZIP(), []int{3}
}

func (x *CreateFacebookAdRequest) GetSearchTerms() string {
	if x != nil {
		return x.SearchTerms
	}
	return ""
}

func (x *CreateFacebookAdRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *CreateFacebookAdRequest) GetPageTotal() int32 {
	if x != nil {
		return x.PageTotal
	}
	return 0
}

func (x *CreateFacebookAdRequest) GetSearchTotal() int32 {
	if x != nil {
		return x.SearchTotal
	}
	return 0
}

func (x *CreateFacebookAdRequest) GetAdActiveStatus() string {
	if x != nil {
		return x.AdActiveStatus
	}
	return ""
}

func (x *CreateFacebookAdRequest) GetAdDeliveryDateMax() string {
	if x != nil {
		return x.AdDeliveryDateMax
	}
	return ""
}

func (x *CreateFacebookAdRequest) GetAdDeliveryDateMin() string {
	if x != nil {
		return x.AdDeliveryDateMin
	}
	return ""
}

func (x *CreateFacebookAdRequest) GetAdReachedCountries() string {
	if x != nil {
		return x.AdReachedCountries
	}
	return ""
}

// Puntual data
type IndOneAMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp string `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	CountPunt string `protobuf:"bytes,2,opt,name=count_punt,json=countPunt,proto3" json:"count_punt,omitempty"`
}

func (x *IndOneAMessage) Reset() {
	*x = IndOneAMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_ads_etl_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndOneAMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndOneAMessage) ProtoMessage() {}

func (x *IndOneAMessage) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_ads_etl_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndOneAMessage.ProtoReflect.Descriptor instead.
func (*IndOneAMessage) Descriptor() ([]byte, []int) {
	return file_facebook_ads_etl_proto_rawDescGZIP(), []int{4}
}

func (x *IndOneAMessage) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *IndOneAMessage) GetCountPunt() string {
	if x != nil {
		return x.CountPunt
	}
	return ""
}

// Accum data
type IndOneBMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp  string `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	CountAccum string `protobuf:"bytes,2,opt,name=count_accum,json=countAccum,proto3" json:"count_accum,omitempty"`
}

func (x *IndOneBMessage) Reset() {
	*x = IndOneBMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_ads_etl_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndOneBMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndOneBMessage) ProtoMessage() {}

func (x *IndOneBMessage) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_ads_etl_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndOneBMessage.ProtoReflect.Descriptor instead.
func (*IndOneBMessage) Descriptor() ([]byte, []int) {
	return file_facebook_ads_etl_proto_rawDescGZIP(), []int{5}
}

func (x *IndOneBMessage) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *IndOneBMessage) GetCountAccum() string {
	if x != nil {
		return x.CountAccum
	}
	return ""
}

// Ind One request
type CreateIndOneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId      int64       `protobuf:"varint,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	FacebookAd *FacebookAd `protobuf:"bytes,2,opt,name=facebook_ad,json=facebookAd,proto3" json:"facebook_ad,omitempty"`
}

func (x *CreateIndOneRequest) Reset() {
	*x = CreateIndOneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_ads_etl_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateIndOneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIndOneRequest) ProtoMessage() {}

func (x *CreateIndOneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_ads_etl_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIndOneRequest.ProtoReflect.Descriptor instead.
func (*CreateIndOneRequest) Descriptor() ([]byte, []int) {
	return file_facebook_ads_etl_proto_rawDescGZIP(), []int{6}
}

func (x *CreateIndOneRequest) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *CreateIndOneRequest) GetFacebookAd() *FacebookAd {
	if x != nil {
		return x.FacebookAd
	}
	return nil
}

// Ind One A and B Response
type CreateIndOneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId   int64             `protobuf:"varint,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	IndOneA []*IndOneAMessage `protobuf:"bytes,2,rep,name=ind_one_a,json=indOneA,proto3" json:"ind_one_a,omitempty"`
	IndOneB []*IndOneBMessage `protobuf:"bytes,3,rep,name=ind_one_b,json=indOneB,proto3" json:"ind_one_b,omitempty"`
}

func (x *CreateIndOneResponse) Reset() {
	*x = CreateIndOneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_ads_etl_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateIndOneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIndOneResponse) ProtoMessage() {}

func (x *CreateIndOneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_ads_etl_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIndOneResponse.ProtoReflect.Descriptor instead.
func (*CreateIndOneResponse) Descriptor() ([]byte, []int) {
	return file_facebook_ads_etl_proto_rawDescGZIP(), []int{7}
}

func (x *CreateIndOneResponse) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *CreateIndOneResponse) GetIndOneA() []*IndOneAMessage {
	if x != nil {
		return x.IndOneA
	}
	return nil
}

func (x *CreateIndOneResponse) GetIndOneB() []*IndOneBMessage {
	if x != nil {
		return x.IndOneB
	}
	return nil
}

// IND TWO //
type IndTwoAdsPerPageMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageName string `protobuf:"bytes,1,opt,name=page_name,json=pageName,proto3" json:"page_name,omitempty"`
	Count    int64  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *IndTwoAdsPerPageMessage) Reset() {
	*x = IndTwoAdsPerPageMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_ads_etl_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndTwoAdsPerPageMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndTwoAdsPerPageMessage) ProtoMessage() {}

func (x *IndTwoAdsPerPageMessage) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_ads_etl_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndTwoAdsPerPageMessage.ProtoReflect.Descriptor instead.
func (*IndTwoAdsPerPageMessage) Descriptor() ([]byte, []int) {
	return file_facebook_ads_etl_proto_rawDescGZIP(), []int{8}
}

func (x *IndTwoAdsPerPageMessage) GetPageName() string {
	if x != nil {
		return x.PageName
	}
	return ""
}

func (x *IndTwoAdsPerPageMessage) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

// Ind two Request
type CreateIndTwoAdsPerPageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId      int64       `protobuf:"varint,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	FacebookAd *FacebookAd `protobuf:"bytes,2,opt,name=facebook_ad,json=facebookAd,proto3" json:"facebook_ad,omitempty"`
}

func (x *CreateIndTwoAdsPerPageRequest) Reset() {
	*x = CreateIndTwoAdsPerPageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_ads_etl_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateIndTwoAdsPerPageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIndTwoAdsPerPageRequest) ProtoMessage() {}

func (x *CreateIndTwoAdsPerPageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_ads_etl_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIndTwoAdsPerPageRequest.ProtoReflect.Descriptor instead.
func (*CreateIndTwoAdsPerPageRequest) Descriptor() ([]byte, []int) {
	return file_facebook_ads_etl_proto_rawDescGZIP(), []int{9}
}

func (x *CreateIndTwoAdsPerPageRequest) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *CreateIndTwoAdsPerPageRequest) GetFacebookAd() *FacebookAd {
	if x != nil {
		return x.FacebookAd
	}
	return nil
}

// Ind two response
type CreateIndTwoAdsPerPageResposne struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId            int64                      `protobuf:"varint,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	IndTwoAdsPerPage []*IndTwoAdsPerPageMessage `protobuf:"bytes,2,rep,name=ind_two_ads_per_page,json=indTwoAdsPerPage,proto3" json:"ind_two_ads_per_page,omitempty"`
}

func (x *CreateIndTwoAdsPerPageResposne) Reset() {
	*x = CreateIndTwoAdsPerPageResposne{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_ads_etl_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateIndTwoAdsPerPageResposne) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIndTwoAdsPerPageResposne) ProtoMessage() {}

func (x *CreateIndTwoAdsPerPageResposne) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_ads_etl_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIndTwoAdsPerPageResposne.ProtoReflect.Descriptor instead.
func (*CreateIndTwoAdsPerPageResposne) Descriptor() ([]byte, []int) {
	return file_facebook_ads_etl_proto_rawDescGZIP(), []int{10}
}

func (x *CreateIndTwoAdsPerPageResposne) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *CreateIndTwoAdsPerPageResposne) GetIndTwoAdsPerPage() []*IndTwoAdsPerPageMessage {
	if x != nil {
		return x.IndTwoAdsPerPage
	}
	return nil
}

var File_facebook_ads_etl_proto protoreflect.FileDescriptor

var file_facebook_ads_etl_proto_rawDesc = []byte{
	0x0a, 0x16, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x64, 0x73, 0x5f, 0x65,
	0x74, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x65, 0x74, 0x6c, 0x22, 0xf1, 0x07, 0x0a, 0x0a, 0x46,
	0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x41, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x61, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x64, 0x5f, 0x73, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61,
	0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x28, 0x0a, 0x10,
	0x61, 0x64, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x62, 0x6f, 0x64, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x37, 0x0a, 0x18, 0x61, 0x64, 0x5f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x63, 0x61, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x61, 0x64, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x3f, 0x0a, 0x1c, 0x61, 0x64, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x6c,
	0x69, 0x6e, 0x6b, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x61, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x33, 0x0a, 0x16, 0x61, 0x64, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f,
	0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x61, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x4c, 0x69, 0x6e, 0x6b,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x61, 0x64, 0x5f, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x61, 0x64, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x15, 0x61, 0x64,
	0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x61, 0x64, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x69,
	0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x4d, 0x69, 0x6e, 0x12, 0x27, 0x0a,
	0x0f, 0x69, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x6d, 0x61, 0x78,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x69, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x4d, 0x61, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x5f,
	0x6d, 0x69, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x70, 0x65, 0x6e, 0x64,
	0x4d, 0x69, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x5f, 0x6d, 0x61, 0x78,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x4d, 0x61, 0x78,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x15, 0x0a, 0x06,
	0x61, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x64,
	0x55, 0x72, 0x6c, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x5f, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x46,
	0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x12, 0x34, 0x0a, 0x16, 0x73, 0x6f, 0x63, 0x69, 0x61,
	0x6c, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x67, 0x72, 0x61,
	0x6d, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x32, 0x0a,
	0x15, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x77, 0x68,
	0x61, 0x74, 0x73, 0x61, 0x70, 0x70, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x6f,
	0x63, 0x69, 0x61, 0x6c, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x57, 0x68, 0x61, 0x74, 0x73, 0x61, 0x70,
	0x70, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x74, 0x65, 0x72, 0x6d,
	0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54,
	0x65, 0x72, 0x6d, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x64, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x61, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2e,
	0x0a, 0x13, 0x70, 0x6f, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x61, 0x63,
	0x68, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x70, 0x6f, 0x74,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x63, 0x68, 0x4d, 0x61, 0x78, 0x12, 0x2e,
	0x0a, 0x13, 0x70, 0x6f, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x61, 0x63,
	0x68, 0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x70, 0x6f, 0x74,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x63, 0x68, 0x4d, 0x69, 0x6e, 0x22, 0xbd,
	0x01, 0x0a, 0x0e, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x41, 0x64, 0x44, 0x65, 0x6d,
	0x6f, 0x12, 0x13, 0x0a, 0x05, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x61, 0x64, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x67,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x70,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x61, 0x64, 0x5f,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x61, 0x64, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xad,
	0x01, 0x0a, 0x10, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x41, 0x64, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x12, 0x13, 0x0a, 0x05, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x70,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x61, 0x64, 0x5f,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x61, 0x64, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xdf,
	0x02, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x41, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x64, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x64,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2f, 0x0a, 0x14,
	0x61, 0x64, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x6d, 0x61, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x64, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x78, 0x12, 0x2f, 0x0a,
	0x14, 0x61, 0x64, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x64, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x6e, 0x12, 0x30,
	0x0a, 0x14, 0x61, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x61, 0x64,
	0x52, 0x65, 0x61, 0x63, 0x68, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x22, 0x4d, 0x0a, 0x0e, 0x49, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x41, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x75, 0x6e, 0x74, 0x22,
	0x4f, 0x0a, 0x0e, 0x49, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x42, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x75, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x75, 0x6d,
	0x22, 0x6b, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x4f, 0x6e, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x3d,
	0x0a, 0x0b, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x61,
	0x64, 0x73, 0x2e, 0x65, 0x74, 0x6c, 0x2e, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x41,
	0x64, 0x52, 0x0a, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x41, 0x64, 0x22, 0xa9, 0x01,
	0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x3c, 0x0a,
	0x09, 0x69, 0x6e, 0x64, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x61, 0x64, 0x73, 0x2e,
	0x65, 0x74, 0x6c, 0x2e, 0x49, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x41, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x07, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x41, 0x12, 0x3c, 0x0a, 0x09, 0x69,
	0x6e, 0x64, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x62, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x65, 0x74,
	0x6c, 0x2e, 0x49, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x42, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x07, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x42, 0x22, 0x4c, 0x0a, 0x17, 0x49, 0x6e, 0x64,
	0x54, 0x77, 0x6f, 0x41, 0x64, 0x73, 0x50, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x75, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x64, 0x54, 0x77, 0x6f, 0x41, 0x64, 0x73, 0x50, 0x65, 0x72, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12,
	0x3d, 0x0a, 0x0b, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x2e,
	0x61, 0x64, 0x73, 0x2e, 0x65, 0x74, 0x6c, 0x2e, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x41, 0x64, 0x52, 0x0a, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x41, 0x64, 0x22, 0x92,
	0x01, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x54, 0x77, 0x6f, 0x41,
	0x64, 0x73, 0x50, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x73, 0x6e,
	0x65, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x59, 0x0a, 0x14, 0x69, 0x6e, 0x64, 0x5f,
	0x74, 0x77, 0x6f, 0x5f, 0x61, 0x64, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x65, 0x74, 0x6c, 0x2e, 0x49, 0x6e, 0x64, 0x54, 0x77, 0x6f,
	0x41, 0x64, 0x73, 0x50, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x10, 0x69, 0x6e, 0x64, 0x54, 0x77, 0x6f, 0x41, 0x64, 0x73, 0x50, 0x65, 0x72, 0x50,
	0x61, 0x67, 0x65, 0x32, 0xfb, 0x01, 0x0a, 0x15, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x41, 0x64, 0x73, 0x45, 0x54, 0x4c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x61, 0x0a,
	0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x12, 0x25, 0x2e,
	0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x65, 0x74, 0x6c,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x2e,
	0x61, 0x64, 0x73, 0x2e, 0x65, 0x74, 0x6c, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x64, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01,
	0x12, 0x7f, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x54, 0x77, 0x6f,
	0x41, 0x64, 0x73, 0x50, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x2e, 0x66, 0x61, 0x63,
	0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x65, 0x74, 0x6c, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x54, 0x77, 0x6f, 0x41, 0x64, 0x73, 0x50, 0x65, 0x72,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x66, 0x61,
	0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x65, 0x74, 0x6c, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x54, 0x77, 0x6f, 0x41, 0x64, 0x73, 0x50, 0x65,
	0x72, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x73, 0x6e, 0x65, 0x22, 0x00, 0x28,
	0x01, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_facebook_ads_etl_proto_rawDescOnce sync.Once
	file_facebook_ads_etl_proto_rawDescData = file_facebook_ads_etl_proto_rawDesc
)

func file_facebook_ads_etl_proto_rawDescGZIP() []byte {
	file_facebook_ads_etl_proto_rawDescOnce.Do(func() {
		file_facebook_ads_etl_proto_rawDescData = protoimpl.X.CompressGZIP(file_facebook_ads_etl_proto_rawDescData)
	})
	return file_facebook_ads_etl_proto_rawDescData
}

var file_facebook_ads_etl_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_facebook_ads_etl_proto_goTypes = []interface{}{
	(*FacebookAd)(nil),                     // 0: facebook.ads.etl.FacebookAd
	(*FacebookAdDemo)(nil),                 // 1: facebook.ads.etl.FacebookAdDemo
	(*FacebookAdRegion)(nil),               // 2: facebook.ads.etl.FacebookAdRegion
	(*CreateFacebookAdRequest)(nil),        // 3: facebook.ads.etl.CreateFacebookAdRequest
	(*IndOneAMessage)(nil),                 // 4: facebook.ads.etl.IndOneAMessage
	(*IndOneBMessage)(nil),                 // 5: facebook.ads.etl.IndOneBMessage
	(*CreateIndOneRequest)(nil),            // 6: facebook.ads.etl.CreateIndOneRequest
	(*CreateIndOneResponse)(nil),           // 7: facebook.ads.etl.CreateIndOneResponse
	(*IndTwoAdsPerPageMessage)(nil),        // 8: facebook.ads.etl.IndTwoAdsPerPageMessage
	(*CreateIndTwoAdsPerPageRequest)(nil),  // 9: facebook.ads.etl.CreateIndTwoAdsPerPageRequest
	(*CreateIndTwoAdsPerPageResposne)(nil), // 10: facebook.ads.etl.CreateIndTwoAdsPerPageResposne
}
var file_facebook_ads_etl_proto_depIdxs = []int32{
	0,  // 0: facebook.ads.etl.CreateIndOneRequest.facebook_ad:type_name -> facebook.ads.etl.FacebookAd
	4,  // 1: facebook.ads.etl.CreateIndOneResponse.ind_one_a:type_name -> facebook.ads.etl.IndOneAMessage
	5,  // 2: facebook.ads.etl.CreateIndOneResponse.ind_one_b:type_name -> facebook.ads.etl.IndOneBMessage
	0,  // 3: facebook.ads.etl.CreateIndTwoAdsPerPageRequest.facebook_ad:type_name -> facebook.ads.etl.FacebookAd
	8,  // 4: facebook.ads.etl.CreateIndTwoAdsPerPageResposne.ind_two_ads_per_page:type_name -> facebook.ads.etl.IndTwoAdsPerPageMessage
	6,  // 5: facebook.ads.etl.FacebookAdsETLService.CreateIndOne:input_type -> facebook.ads.etl.CreateIndOneRequest
	9,  // 6: facebook.ads.etl.FacebookAdsETLService.CreateIndTwoAdsPerPage:input_type -> facebook.ads.etl.CreateIndTwoAdsPerPageRequest
	7,  // 7: facebook.ads.etl.FacebookAdsETLService.CreateIndOne:output_type -> facebook.ads.etl.CreateIndOneResponse
	10, // 8: facebook.ads.etl.FacebookAdsETLService.CreateIndTwoAdsPerPage:output_type -> facebook.ads.etl.CreateIndTwoAdsPerPageResposne
	7,  // [7:9] is the sub-list for method output_type
	5,  // [5:7] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_facebook_ads_etl_proto_init() }
func file_facebook_ads_etl_proto_init() {
	if File_facebook_ads_etl_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_facebook_ads_etl_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FacebookAd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_ads_etl_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FacebookAdDemo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_ads_etl_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FacebookAdRegion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_ads_etl_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFacebookAdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_ads_etl_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndOneAMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_ads_etl_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndOneBMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_ads_etl_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateIndOneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_ads_etl_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateIndOneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_ads_etl_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndTwoAdsPerPageMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_ads_etl_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateIndTwoAdsPerPageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_ads_etl_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateIndTwoAdsPerPageResposne); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_facebook_ads_etl_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_facebook_ads_etl_proto_goTypes,
		DependencyIndexes: file_facebook_ads_etl_proto_depIdxs,
		MessageInfos:      file_facebook_ads_etl_proto_msgTypes,
	}.Build()
	File_facebook_ads_etl_proto = out.File
	file_facebook_ads_etl_proto_rawDesc = nil
	file_facebook_ads_etl_proto_goTypes = nil
	file_facebook_ads_etl_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FacebookAdsETLServiceClient is the client API for FacebookAdsETLService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FacebookAdsETLServiceClient interface {
	CreateIndOne(ctx context.Context, opts ...grpc.CallOption) (FacebookAdsETLService_CreateIndOneClient, error)
	CreateIndTwoAdsPerPage(ctx context.Context, opts ...grpc.CallOption) (FacebookAdsETLService_CreateIndTwoAdsPerPageClient, error)
}

type facebookAdsETLServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFacebookAdsETLServiceClient(cc grpc.ClientConnInterface) FacebookAdsETLServiceClient {
	return &facebookAdsETLServiceClient{cc}
}

func (c *facebookAdsETLServiceClient) CreateIndOne(ctx context.Context, opts ...grpc.CallOption) (FacebookAdsETLService_CreateIndOneClient, error) {
	stream, err := c.cc.NewStream(ctx, &_FacebookAdsETLService_serviceDesc.Streams[0], "/facebook.ads.etl.FacebookAdsETLService/CreateIndOne", opts...)
	if err != nil {
		return nil, err
	}
	x := &facebookAdsETLServiceCreateIndOneClient{stream}
	return x, nil
}

type FacebookAdsETLService_CreateIndOneClient interface {
	Send(*CreateIndOneRequest) error
	CloseAndRecv() (*CreateIndOneResponse, error)
	grpc.ClientStream
}

type facebookAdsETLServiceCreateIndOneClient struct {
	grpc.ClientStream
}

func (x *facebookAdsETLServiceCreateIndOneClient) Send(m *CreateIndOneRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *facebookAdsETLServiceCreateIndOneClient) CloseAndRecv() (*CreateIndOneResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(CreateIndOneResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *facebookAdsETLServiceClient) CreateIndTwoAdsPerPage(ctx context.Context, opts ...grpc.CallOption) (FacebookAdsETLService_CreateIndTwoAdsPerPageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_FacebookAdsETLService_serviceDesc.Streams[1], "/facebook.ads.etl.FacebookAdsETLService/CreateIndTwoAdsPerPage", opts...)
	if err != nil {
		return nil, err
	}
	x := &facebookAdsETLServiceCreateIndTwoAdsPerPageClient{stream}
	return x, nil
}

type FacebookAdsETLService_CreateIndTwoAdsPerPageClient interface {
	Send(*CreateIndTwoAdsPerPageRequest) error
	CloseAndRecv() (*CreateIndTwoAdsPerPageResposne, error)
	grpc.ClientStream
}

type facebookAdsETLServiceCreateIndTwoAdsPerPageClient struct {
	grpc.ClientStream
}

func (x *facebookAdsETLServiceCreateIndTwoAdsPerPageClient) Send(m *CreateIndTwoAdsPerPageRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *facebookAdsETLServiceCreateIndTwoAdsPerPageClient) CloseAndRecv() (*CreateIndTwoAdsPerPageResposne, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(CreateIndTwoAdsPerPageResposne)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// FacebookAdsETLServiceServer is the server API for FacebookAdsETLService service.
type FacebookAdsETLServiceServer interface {
	CreateIndOne(FacebookAdsETLService_CreateIndOneServer) error
	CreateIndTwoAdsPerPage(FacebookAdsETLService_CreateIndTwoAdsPerPageServer) error
}

// UnimplementedFacebookAdsETLServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFacebookAdsETLServiceServer struct {
}

func (*UnimplementedFacebookAdsETLServiceServer) CreateIndOne(FacebookAdsETLService_CreateIndOneServer) error {
	return status.Errorf(codes.Unimplemented, "method CreateIndOne not implemented")
}
func (*UnimplementedFacebookAdsETLServiceServer) CreateIndTwoAdsPerPage(FacebookAdsETLService_CreateIndTwoAdsPerPageServer) error {
	return status.Errorf(codes.Unimplemented, "method CreateIndTwoAdsPerPage not implemented")
}

func RegisterFacebookAdsETLServiceServer(s *grpc.Server, srv FacebookAdsETLServiceServer) {
	s.RegisterService(&_FacebookAdsETLService_serviceDesc, srv)
}

func _FacebookAdsETLService_CreateIndOne_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(FacebookAdsETLServiceServer).CreateIndOne(&facebookAdsETLServiceCreateIndOneServer{stream})
}

type FacebookAdsETLService_CreateIndOneServer interface {
	SendAndClose(*CreateIndOneResponse) error
	Recv() (*CreateIndOneRequest, error)
	grpc.ServerStream
}

type facebookAdsETLServiceCreateIndOneServer struct {
	grpc.ServerStream
}

func (x *facebookAdsETLServiceCreateIndOneServer) SendAndClose(m *CreateIndOneResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *facebookAdsETLServiceCreateIndOneServer) Recv() (*CreateIndOneRequest, error) {
	m := new(CreateIndOneRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _FacebookAdsETLService_CreateIndTwoAdsPerPage_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(FacebookAdsETLServiceServer).CreateIndTwoAdsPerPage(&facebookAdsETLServiceCreateIndTwoAdsPerPageServer{stream})
}

type FacebookAdsETLService_CreateIndTwoAdsPerPageServer interface {
	SendAndClose(*CreateIndTwoAdsPerPageResposne) error
	Recv() (*CreateIndTwoAdsPerPageRequest, error)
	grpc.ServerStream
}

type facebookAdsETLServiceCreateIndTwoAdsPerPageServer struct {
	grpc.ServerStream
}

func (x *facebookAdsETLServiceCreateIndTwoAdsPerPageServer) SendAndClose(m *CreateIndTwoAdsPerPageResposne) error {
	return x.ServerStream.SendMsg(m)
}

func (x *facebookAdsETLServiceCreateIndTwoAdsPerPageServer) Recv() (*CreateIndTwoAdsPerPageRequest, error) {
	m := new(CreateIndTwoAdsPerPageRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _FacebookAdsETLService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "facebook.ads.etl.FacebookAdsETLService",
	HandlerType: (*FacebookAdsETLServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "CreateIndOne",
			Handler:       _FacebookAdsETLService_CreateIndOne_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "CreateIndTwoAdsPerPage",
			Handler:       _FacebookAdsETLService_CreateIndTwoAdsPerPage_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "facebook_ads_etl.proto",
}
