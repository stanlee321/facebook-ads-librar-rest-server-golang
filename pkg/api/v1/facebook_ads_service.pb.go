// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.5.1
// source: facebook_ads_service.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type FacebookAd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdId                      string `protobuf:"bytes,1,opt,name=ad_id,json=adId,proto3" json:"ad_id,omitempty"`
	PageId                    string `protobuf:"bytes,2,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty"`
	PageName                  string `protobuf:"bytes,3,opt,name=page_name,json=pageName,proto3" json:"page_name,omitempty"`
	AdSnapshotUrl             string `protobuf:"bytes,4,opt,name=ad_snapshot_url,json=adSnapshotUrl,proto3" json:"ad_snapshot_url,omitempty"`
	AdCreativeBody            string `protobuf:"bytes,5,opt,name=ad_creative_body,json=adCreativeBody,proto3" json:"ad_creative_body,omitempty"`
	AdCreativeLinkCaption     string `protobuf:"bytes,6,opt,name=ad_creative_link_caption,json=adCreativeLinkCaption,proto3" json:"ad_creative_link_caption,omitempty"`
	AdCreativeLinkDescription string `protobuf:"bytes,7,opt,name=ad_creative_link_description,json=adCreativeLinkDescription,proto3" json:"ad_creative_link_description,omitempty"`
	AdCreativeLinkTitle       string `protobuf:"bytes,8,opt,name=ad_creative_link_title,json=adCreativeLinkTitle,proto3" json:"ad_creative_link_title,omitempty"`
	AdDeliveryStartTime       string `protobuf:"bytes,9,opt,name=ad_delivery_start_time,json=adDeliveryStartTime,proto3" json:"ad_delivery_start_time,omitempty"`
	AdDeliveryStopTime        string `protobuf:"bytes,10,opt,name=ad_delivery_stop_time,json=adDeliveryStopTime,proto3" json:"ad_delivery_stop_time,omitempty"`
	FundingEntity             string `protobuf:"bytes,11,opt,name=funding_entity,json=fundingEntity,proto3" json:"funding_entity,omitempty"`
	ImpressionsMin            int32  `protobuf:"varint,12,opt,name=impressions_min,json=impressionsMin,proto3" json:"impressions_min,omitempty"`
	ImpressionsMax            int32  `protobuf:"varint,13,opt,name=impressions_max,json=impressionsMax,proto3" json:"impressions_max,omitempty"`
	SpendMin                  int32  `protobuf:"varint,14,opt,name=spend_min,json=spendMin,proto3" json:"spend_min,omitempty"`
	SpendMax                  int32  `protobuf:"varint,15,opt,name=spend_max,json=spendMax,proto3" json:"spend_max,omitempty"`
	Currency                  string `protobuf:"bytes,16,opt,name=currency,proto3" json:"currency,omitempty"`
	AdUrl                     string `protobuf:"bytes,17,opt,name=ad_url,json=adUrl,proto3" json:"ad_url,omitempty"`
	SocialMediaFacebook       string `protobuf:"bytes,18,opt,name=social_media_facebook,json=socialMediaFacebook,proto3" json:"social_media_facebook,omitempty"`
	SocialMediaInstagram      string `protobuf:"bytes,19,opt,name=social_media_instagram,json=socialMediaInstagram,proto3" json:"social_media_instagram,omitempty"`
	SocialMediaWhatsapp       string `protobuf:"bytes,20,opt,name=social_media_whatsapp,json=socialMediaWhatsapp,proto3" json:"social_media_whatsapp,omitempty"`
	SearchTerms               string `protobuf:"bytes,21,opt,name=search_terms,json=searchTerms,proto3" json:"search_terms,omitempty"`
	AdCreationTime            string `protobuf:"bytes,22,opt,name=ad_creation_time,json=adCreationTime,proto3" json:"ad_creation_time,omitempty"`
	PotentialReachMax         int32  `protobuf:"varint,23,opt,name=potential_reach_max,json=potentialReachMax,proto3" json:"potential_reach_max,omitempty"`
	PotentialReachMin         int32  `protobuf:"varint,24,opt,name=potential_reach_min,json=potentialReachMin,proto3" json:"potential_reach_min,omitempty"`
}

func (x *FacebookAd) Reset() {
	*x = FacebookAd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_ads_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FacebookAd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FacebookAd) ProtoMessage() {}

func (x *FacebookAd) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_ads_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FacebookAd.ProtoReflect.Descriptor instead.
func (*FacebookAd) Descriptor() ([]byte, []int) {
	return file_facebook_ads_service_proto_rawDescGZIP(), []int{0}
}

func (x *FacebookAd) GetAdId() string {
	if x != nil {
		return x.AdId
	}
	return ""
}

func (x *FacebookAd) GetPageId() string {
	if x != nil {
		return x.PageId
	}
	return ""
}

func (x *FacebookAd) GetPageName() string {
	if x != nil {
		return x.PageName
	}
	return ""
}

func (x *FacebookAd) GetAdSnapshotUrl() string {
	if x != nil {
		return x.AdSnapshotUrl
	}
	return ""
}

func (x *FacebookAd) GetAdCreativeBody() string {
	if x != nil {
		return x.AdCreativeBody
	}
	return ""
}

func (x *FacebookAd) GetAdCreativeLinkCaption() string {
	if x != nil {
		return x.AdCreativeLinkCaption
	}
	return ""
}

func (x *FacebookAd) GetAdCreativeLinkDescription() string {
	if x != nil {
		return x.AdCreativeLinkDescription
	}
	return ""
}

func (x *FacebookAd) GetAdCreativeLinkTitle() string {
	if x != nil {
		return x.AdCreativeLinkTitle
	}
	return ""
}

func (x *FacebookAd) GetAdDeliveryStartTime() string {
	if x != nil {
		return x.AdDeliveryStartTime
	}
	return ""
}

func (x *FacebookAd) GetAdDeliveryStopTime() string {
	if x != nil {
		return x.AdDeliveryStopTime
	}
	return ""
}

func (x *FacebookAd) GetFundingEntity() string {
	if x != nil {
		return x.FundingEntity
	}
	return ""
}

func (x *FacebookAd) GetImpressionsMin() int32 {
	if x != nil {
		return x.ImpressionsMin
	}
	return 0
}

func (x *FacebookAd) GetImpressionsMax() int32 {
	if x != nil {
		return x.ImpressionsMax
	}
	return 0
}

func (x *FacebookAd) GetSpendMin() int32 {
	if x != nil {
		return x.SpendMin
	}
	return 0
}

func (x *FacebookAd) GetSpendMax() int32 {
	if x != nil {
		return x.SpendMax
	}
	return 0
}

func (x *FacebookAd) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *FacebookAd) GetAdUrl() string {
	if x != nil {
		return x.AdUrl
	}
	return ""
}

func (x *FacebookAd) GetSocialMediaFacebook() string {
	if x != nil {
		return x.SocialMediaFacebook
	}
	return ""
}

func (x *FacebookAd) GetSocialMediaInstagram() string {
	if x != nil {
		return x.SocialMediaInstagram
	}
	return ""
}

func (x *FacebookAd) GetSocialMediaWhatsapp() string {
	if x != nil {
		return x.SocialMediaWhatsapp
	}
	return ""
}

func (x *FacebookAd) GetSearchTerms() string {
	if x != nil {
		return x.SearchTerms
	}
	return ""
}

func (x *FacebookAd) GetAdCreationTime() string {
	if x != nil {
		return x.AdCreationTime
	}
	return ""
}

func (x *FacebookAd) GetPotentialReachMax() int32 {
	if x != nil {
		return x.PotentialReachMax
	}
	return 0
}

func (x *FacebookAd) GetPotentialReachMin() int32 {
	if x != nil {
		return x.PotentialReachMin
	}
	return 0
}

type FacebookAdDemo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdId                string  `protobuf:"bytes,1,opt,name=ad_id,json=adId,proto3" json:"ad_id,omitempty"`
	PageId              string  `protobuf:"bytes,2,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty"`
	Age                 string  `protobuf:"bytes,3,opt,name=age,proto3" json:"age,omitempty"`
	Gender              string  `protobuf:"bytes,4,opt,name=gender,proto3" json:"gender,omitempty"`
	Percentage          float64 `protobuf:"fixed64,5,opt,name=percentage,proto3" json:"percentage,omitempty"`
	AdDeliveryStartTime string  `protobuf:"bytes,6,opt,name=ad_delivery_start_time,json=adDeliveryStartTime,proto3" json:"ad_delivery_start_time,omitempty"`
}

func (x *FacebookAdDemo) Reset() {
	*x = FacebookAdDemo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_ads_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FacebookAdDemo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FacebookAdDemo) ProtoMessage() {}

func (x *FacebookAdDemo) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_ads_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FacebookAdDemo.ProtoReflect.Descriptor instead.
func (*FacebookAdDemo) Descriptor() ([]byte, []int) {
	return file_facebook_ads_service_proto_rawDescGZIP(), []int{1}
}

func (x *FacebookAdDemo) GetAdId() string {
	if x != nil {
		return x.AdId
	}
	return ""
}

func (x *FacebookAdDemo) GetPageId() string {
	if x != nil {
		return x.PageId
	}
	return ""
}

func (x *FacebookAdDemo) GetAge() string {
	if x != nil {
		return x.Age
	}
	return ""
}

func (x *FacebookAdDemo) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *FacebookAdDemo) GetPercentage() float64 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

func (x *FacebookAdDemo) GetAdDeliveryStartTime() string {
	if x != nil {
		return x.AdDeliveryStartTime
	}
	return ""
}

type FacebookAdRegion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdId                string  `protobuf:"bytes,1,opt,name=ad_id,json=adId,proto3" json:"ad_id,omitempty"`
	PageId              string  `protobuf:"bytes,2,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty"`
	Region              string  `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	Percentage          float64 `protobuf:"fixed64,4,opt,name=percentage,proto3" json:"percentage,omitempty"`
	AdDeliveryStartTime string  `protobuf:"bytes,5,opt,name=ad_delivery_start_time,json=adDeliveryStartTime,proto3" json:"ad_delivery_start_time,omitempty"`
}

func (x *FacebookAdRegion) Reset() {
	*x = FacebookAdRegion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_ads_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FacebookAdRegion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FacebookAdRegion) ProtoMessage() {}

func (x *FacebookAdRegion) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_ads_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FacebookAdRegion.ProtoReflect.Descriptor instead.
func (*FacebookAdRegion) Descriptor() ([]byte, []int) {
	return file_facebook_ads_service_proto_rawDescGZIP(), []int{2}
}

func (x *FacebookAdRegion) GetAdId() string {
	if x != nil {
		return x.AdId
	}
	return ""
}

func (x *FacebookAdRegion) GetPageId() string {
	if x != nil {
		return x.PageId
	}
	return ""
}

func (x *FacebookAdRegion) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *FacebookAdRegion) GetPercentage() float64 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

func (x *FacebookAdRegion) GetAdDeliveryStartTime() string {
	if x != nil {
		return x.AdDeliveryStartTime
	}
	return ""
}

type CreateFacebookAdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchTerms        string `protobuf:"bytes,1,opt,name=search_terms,json=searchTerms,proto3" json:"search_terms,omitempty"`
	AccessToken        string `protobuf:"bytes,2,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	PageTotal          int32  `protobuf:"varint,3,opt,name=page_total,json=pageTotal,proto3" json:"page_total,omitempty"`
	SearchTotal        int32  `protobuf:"varint,4,opt,name=search_total,json=searchTotal,proto3" json:"search_total,omitempty"`
	AdActiveStatus     string `protobuf:"bytes,5,opt,name=ad_active_status,json=adActiveStatus,proto3" json:"ad_active_status,omitempty"`
	AdDeliveryDateMax  string `protobuf:"bytes,6,opt,name=ad_delivery_date_max,json=adDeliveryDateMax,proto3" json:"ad_delivery_date_max,omitempty"`
	AdDeliveryDateMin  string `protobuf:"bytes,7,opt,name=ad_delivery_date_min,json=adDeliveryDateMin,proto3" json:"ad_delivery_date_min,omitempty"`
	AdReachedCountries string `protobuf:"bytes,8,opt,name=ad_reached_countries,json=adReachedCountries,proto3" json:"ad_reached_countries,omitempty"`
}

func (x *CreateFacebookAdRequest) Reset() {
	*x = CreateFacebookAdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_ads_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFacebookAdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFacebookAdRequest) ProtoMessage() {}

func (x *CreateFacebookAdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_ads_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFacebookAdRequest.ProtoReflect.Descriptor instead.
func (*CreateFacebookAdRequest) Descriptor() ([]byte, []int) {
	return file_facebook_ads_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreateFacebookAdRequest) GetSearchTerms() string {
	if x != nil {
		return x.SearchTerms
	}
	return ""
}

func (x *CreateFacebookAdRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *CreateFacebookAdRequest) GetPageTotal() int32 {
	if x != nil {
		return x.PageTotal
	}
	return 0
}

func (x *CreateFacebookAdRequest) GetSearchTotal() int32 {
	if x != nil {
		return x.SearchTotal
	}
	return 0
}

func (x *CreateFacebookAdRequest) GetAdActiveStatus() string {
	if x != nil {
		return x.AdActiveStatus
	}
	return ""
}

func (x *CreateFacebookAdRequest) GetAdDeliveryDateMax() string {
	if x != nil {
		return x.AdDeliveryDateMax
	}
	return ""
}

func (x *CreateFacebookAdRequest) GetAdDeliveryDateMin() string {
	if x != nil {
		return x.AdDeliveryDateMin
	}
	return ""
}

func (x *CreateFacebookAdRequest) GetAdReachedCountries() string {
	if x != nil {
		return x.AdReachedCountries
	}
	return ""
}

type CreateFacebookAdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FacebookAd       *FacebookAd       `protobuf:"bytes,1,opt,name=facebook_ad,json=facebookAd,proto3" json:"facebook_ad,omitempty"`
	FacebookAdDemo   *FacebookAdDemo   `protobuf:"bytes,2,opt,name=facebook_ad_demo,json=facebookAdDemo,proto3" json:"facebook_ad_demo,omitempty"`
	FacebookAdRegion *FacebookAdRegion `protobuf:"bytes,3,opt,name=facebook_ad_region,json=facebookAdRegion,proto3" json:"facebook_ad_region,omitempty"`
	SearchTerms      string            `protobuf:"bytes,4,opt,name=search_terms,json=searchTerms,proto3" json:"search_terms,omitempty"`
}

func (x *CreateFacebookAdResponse) Reset() {
	*x = CreateFacebookAdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_ads_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFacebookAdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFacebookAdResponse) ProtoMessage() {}

func (x *CreateFacebookAdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_ads_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFacebookAdResponse.ProtoReflect.Descriptor instead.
func (*CreateFacebookAdResponse) Descriptor() ([]byte, []int) {
	return file_facebook_ads_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreateFacebookAdResponse) GetFacebookAd() *FacebookAd {
	if x != nil {
		return x.FacebookAd
	}
	return nil
}

func (x *CreateFacebookAdResponse) GetFacebookAdDemo() *FacebookAdDemo {
	if x != nil {
		return x.FacebookAdDemo
	}
	return nil
}

func (x *CreateFacebookAdResponse) GetFacebookAdRegion() *FacebookAdRegion {
	if x != nil {
		return x.FacebookAdRegion
	}
	return nil
}

func (x *CreateFacebookAdResponse) GetSearchTerms() string {
	if x != nil {
		return x.SearchTerms
	}
	return ""
}

var File_facebook_ads_service_proto protoreflect.FileDescriptor

var file_facebook_ads_service_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x64, 0x73, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x66, 0x61,
	0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x61, 0x64, 0x73, 0x22, 0xf1, 0x07, 0x0a, 0x0a, 0x46,
	0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x41, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x61, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x64, 0x5f, 0x73, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61,
	0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x28, 0x0a, 0x10,
	0x61, 0x64, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x62, 0x6f, 0x64, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x37, 0x0a, 0x18, 0x61, 0x64, 0x5f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x63, 0x61, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x61, 0x64, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x3f, 0x0a, 0x1c, 0x61, 0x64, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x6c,
	0x69, 0x6e, 0x6b, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x61, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x33, 0x0a, 0x16, 0x61, 0x64, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f,
	0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x61, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x4c, 0x69, 0x6e, 0x6b,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x61, 0x64, 0x5f, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x61, 0x64, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x15, 0x61, 0x64,
	0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x61, 0x64, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x69,
	0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x4d, 0x69, 0x6e, 0x12, 0x27, 0x0a,
	0x0f, 0x69, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x6d, 0x61, 0x78,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x69, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x4d, 0x61, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x5f,
	0x6d, 0x69, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x70, 0x65, 0x6e, 0x64,
	0x4d, 0x69, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x5f, 0x6d, 0x61, 0x78,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x4d, 0x61, 0x78,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x15, 0x0a, 0x06,
	0x61, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x64,
	0x55, 0x72, 0x6c, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x5f, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x46,
	0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x12, 0x34, 0x0a, 0x16, 0x73, 0x6f, 0x63, 0x69, 0x61,
	0x6c, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x67, 0x72, 0x61,
	0x6d, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x32, 0x0a,
	0x15, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x77, 0x68,
	0x61, 0x74, 0x73, 0x61, 0x70, 0x70, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x6f,
	0x63, 0x69, 0x61, 0x6c, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x57, 0x68, 0x61, 0x74, 0x73, 0x61, 0x70,
	0x70, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x74, 0x65, 0x72, 0x6d,
	0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54,
	0x65, 0x72, 0x6d, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x64, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x61, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2e,
	0x0a, 0x13, 0x70, 0x6f, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x61, 0x63,
	0x68, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x70, 0x6f, 0x74,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x63, 0x68, 0x4d, 0x61, 0x78, 0x12, 0x2e,
	0x0a, 0x13, 0x70, 0x6f, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x61, 0x63,
	0x68, 0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x70, 0x6f, 0x74,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x63, 0x68, 0x4d, 0x69, 0x6e, 0x22, 0xbd,
	0x01, 0x0a, 0x0e, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x41, 0x64, 0x44, 0x65, 0x6d,
	0x6f, 0x12, 0x13, 0x0a, 0x05, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x61, 0x64, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x67,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x70,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x61, 0x64, 0x5f,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x61, 0x64, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xad,
	0x01, 0x0a, 0x10, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x41, 0x64, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x12, 0x13, 0x0a, 0x05, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x70,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x61, 0x64, 0x5f,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x61, 0x64, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xdf,
	0x02, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x41, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x64, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x64,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2f, 0x0a, 0x14,
	0x61, 0x64, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x6d, 0x61, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x64, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x78, 0x12, 0x2f, 0x0a,
	0x14, 0x61, 0x64, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x64, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x6e, 0x12, 0x30,
	0x0a, 0x14, 0x61, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x61, 0x64,
	0x52, 0x65, 0x61, 0x63, 0x68, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x22, 0x8e, 0x02, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x61, 0x63, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x41, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a,
	0x0b, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x61, 0x64,
	0x73, 0x2e, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x41, 0x64, 0x52, 0x0a, 0x66, 0x61,
	0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x41, 0x64, 0x12, 0x46, 0x0a, 0x10, 0x66, 0x61, 0x63, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x64, 0x5f, 0x64, 0x65, 0x6d, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x61, 0x64,
	0x73, 0x2e, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x41, 0x64, 0x44, 0x65, 0x6d, 0x6f,
	0x52, 0x0e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x41, 0x64, 0x44, 0x65, 0x6d, 0x6f,
	0x12, 0x4c, 0x0a, 0x12, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x64, 0x5f,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x66,
	0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x46, 0x61, 0x63, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x41, 0x64, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x66, 0x61,
	0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x41, 0x64, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x21,
	0x0a, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x65, 0x72, 0x6d,
	0x73, 0x32, 0x7b, 0x0a, 0x12, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x41, 0x64, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x65, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x41, 0x64, 0x12, 0x25, 0x2e, 0x66, 0x61,
	0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x41, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x26, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x61, 0x64,
	0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x41, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x42, 0x06,
	0x5a, 0x04, 0x2e, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_facebook_ads_service_proto_rawDescOnce sync.Once
	file_facebook_ads_service_proto_rawDescData = file_facebook_ads_service_proto_rawDesc
)

func file_facebook_ads_service_proto_rawDescGZIP() []byte {
	file_facebook_ads_service_proto_rawDescOnce.Do(func() {
		file_facebook_ads_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_facebook_ads_service_proto_rawDescData)
	})
	return file_facebook_ads_service_proto_rawDescData
}

var file_facebook_ads_service_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_facebook_ads_service_proto_goTypes = []interface{}{
	(*FacebookAd)(nil),               // 0: facebook.ads.FacebookAd
	(*FacebookAdDemo)(nil),           // 1: facebook.ads.FacebookAdDemo
	(*FacebookAdRegion)(nil),         // 2: facebook.ads.FacebookAdRegion
	(*CreateFacebookAdRequest)(nil),  // 3: facebook.ads.CreateFacebookAdRequest
	(*CreateFacebookAdResponse)(nil), // 4: facebook.ads.CreateFacebookAdResponse
}
var file_facebook_ads_service_proto_depIdxs = []int32{
	0, // 0: facebook.ads.CreateFacebookAdResponse.facebook_ad:type_name -> facebook.ads.FacebookAd
	1, // 1: facebook.ads.CreateFacebookAdResponse.facebook_ad_demo:type_name -> facebook.ads.FacebookAdDemo
	2, // 2: facebook.ads.CreateFacebookAdResponse.facebook_ad_region:type_name -> facebook.ads.FacebookAdRegion
	3, // 3: facebook.ads.FacebookAdsService.CreateFacebookAd:input_type -> facebook.ads.CreateFacebookAdRequest
	4, // 4: facebook.ads.FacebookAdsService.CreateFacebookAd:output_type -> facebook.ads.CreateFacebookAdResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_facebook_ads_service_proto_init() }
func file_facebook_ads_service_proto_init() {
	if File_facebook_ads_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_facebook_ads_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FacebookAd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_ads_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FacebookAdDemo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_ads_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FacebookAdRegion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_ads_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFacebookAdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_ads_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFacebookAdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_facebook_ads_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_facebook_ads_service_proto_goTypes,
		DependencyIndexes: file_facebook_ads_service_proto_depIdxs,
		MessageInfos:      file_facebook_ads_service_proto_msgTypes,
	}.Build()
	File_facebook_ads_service_proto = out.File
	file_facebook_ads_service_proto_rawDesc = nil
	file_facebook_ads_service_proto_goTypes = nil
	file_facebook_ads_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FacebookAdsServiceClient is the client API for FacebookAdsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FacebookAdsServiceClient interface {
	CreateFacebookAd(ctx context.Context, in *CreateFacebookAdRequest, opts ...grpc.CallOption) (FacebookAdsService_CreateFacebookAdClient, error)
}

type facebookAdsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFacebookAdsServiceClient(cc grpc.ClientConnInterface) FacebookAdsServiceClient {
	return &facebookAdsServiceClient{cc}
}

func (c *facebookAdsServiceClient) CreateFacebookAd(ctx context.Context, in *CreateFacebookAdRequest, opts ...grpc.CallOption) (FacebookAdsService_CreateFacebookAdClient, error) {
	stream, err := c.cc.NewStream(ctx, &_FacebookAdsService_serviceDesc.Streams[0], "/facebook.ads.FacebookAdsService/CreateFacebookAd", opts...)
	if err != nil {
		return nil, err
	}
	x := &facebookAdsServiceCreateFacebookAdClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type FacebookAdsService_CreateFacebookAdClient interface {
	Recv() (*CreateFacebookAdResponse, error)
	grpc.ClientStream
}

type facebookAdsServiceCreateFacebookAdClient struct {
	grpc.ClientStream
}

func (x *facebookAdsServiceCreateFacebookAdClient) Recv() (*CreateFacebookAdResponse, error) {
	m := new(CreateFacebookAdResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// FacebookAdsServiceServer is the server API for FacebookAdsService service.
type FacebookAdsServiceServer interface {
	CreateFacebookAd(*CreateFacebookAdRequest, FacebookAdsService_CreateFacebookAdServer) error
}

// UnimplementedFacebookAdsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFacebookAdsServiceServer struct {
}

func (*UnimplementedFacebookAdsServiceServer) CreateFacebookAd(*CreateFacebookAdRequest, FacebookAdsService_CreateFacebookAdServer) error {
	return status.Errorf(codes.Unimplemented, "method CreateFacebookAd not implemented")
}

func RegisterFacebookAdsServiceServer(s *grpc.Server, srv FacebookAdsServiceServer) {
	s.RegisterService(&_FacebookAdsService_serviceDesc, srv)
}

func _FacebookAdsService_CreateFacebookAd_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CreateFacebookAdRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(FacebookAdsServiceServer).CreateFacebookAd(m, &facebookAdsServiceCreateFacebookAdServer{stream})
}

type FacebookAdsService_CreateFacebookAdServer interface {
	Send(*CreateFacebookAdResponse) error
	grpc.ServerStream
}

type facebookAdsServiceCreateFacebookAdServer struct {
	grpc.ServerStream
}

func (x *facebookAdsServiceCreateFacebookAdServer) Send(m *CreateFacebookAdResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _FacebookAdsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "facebook.ads.FacebookAdsService",
	HandlerType: (*FacebookAdsServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "CreateFacebookAd",
			Handler:       _FacebookAdsService_CreateFacebookAd_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "facebook_ads_service.proto",
}
